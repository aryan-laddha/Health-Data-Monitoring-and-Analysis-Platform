// Generated by view binder compiler. Do not edit!
package com.example.passivedatacompose.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.passivedatacompose.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText ageEditText;

  @NonNull
  public final TextView ageLabel;

  @NonNull
  public final EditText bloodGroupEditText;

  @NonNull
  public final TextView bloodGroupLabel;

  @NonNull
  public final EditText bpsEditText;

  @NonNull
  public final TextView bpsLabel;

  @NonNull
  public final EditText cholesterolEditText;

  @NonNull
  public final TextView cholesterolLabel;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final EditText doctorIdEditText;

  @NonNull
  public final TextView doctorIdLabel;

  @NonNull
  public final EditText fbsEditText;

  @NonNull
  public final TextView fbsLabel;

  @NonNull
  public final EditText genderEditText;

  @NonNull
  public final TextView genderLabel;

  @NonNull
  public final EditText heightEditText;

  @NonNull
  public final TextView heightLabel;

  @NonNull
  public final EditText nameEditText;

  @NonNull
  public final TextView nameLabel;

  @NonNull
  public final EditText weightEditText;

  @NonNull
  public final TextView weightLabel;

  private ActivityEditProfileBinding(@NonNull ScrollView rootView, @NonNull EditText ageEditText,
      @NonNull TextView ageLabel, @NonNull EditText bloodGroupEditText,
      @NonNull TextView bloodGroupLabel, @NonNull EditText bpsEditText, @NonNull TextView bpsLabel,
      @NonNull EditText cholesterolEditText, @NonNull TextView cholesterolLabel,
      @NonNull Button confirmButton, @NonNull EditText doctorIdEditText,
      @NonNull TextView doctorIdLabel, @NonNull EditText fbsEditText, @NonNull TextView fbsLabel,
      @NonNull EditText genderEditText, @NonNull TextView genderLabel,
      @NonNull EditText heightEditText, @NonNull TextView heightLabel,
      @NonNull EditText nameEditText, @NonNull TextView nameLabel, @NonNull EditText weightEditText,
      @NonNull TextView weightLabel) {
    this.rootView = rootView;
    this.ageEditText = ageEditText;
    this.ageLabel = ageLabel;
    this.bloodGroupEditText = bloodGroupEditText;
    this.bloodGroupLabel = bloodGroupLabel;
    this.bpsEditText = bpsEditText;
    this.bpsLabel = bpsLabel;
    this.cholesterolEditText = cholesterolEditText;
    this.cholesterolLabel = cholesterolLabel;
    this.confirmButton = confirmButton;
    this.doctorIdEditText = doctorIdEditText;
    this.doctorIdLabel = doctorIdLabel;
    this.fbsEditText = fbsEditText;
    this.fbsLabel = fbsLabel;
    this.genderEditText = genderEditText;
    this.genderLabel = genderLabel;
    this.heightEditText = heightEditText;
    this.heightLabel = heightLabel;
    this.nameEditText = nameEditText;
    this.nameLabel = nameLabel;
    this.weightEditText = weightEditText;
    this.weightLabel = weightLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageEditText;
      EditText ageEditText = ViewBindings.findChildViewById(rootView, id);
      if (ageEditText == null) {
        break missingId;
      }

      id = R.id.ageLabel;
      TextView ageLabel = ViewBindings.findChildViewById(rootView, id);
      if (ageLabel == null) {
        break missingId;
      }

      id = R.id.bloodGroupEditText;
      EditText bloodGroupEditText = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupEditText == null) {
        break missingId;
      }

      id = R.id.bloodGroupLabel;
      TextView bloodGroupLabel = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupLabel == null) {
        break missingId;
      }

      id = R.id.bpsEditText;
      EditText bpsEditText = ViewBindings.findChildViewById(rootView, id);
      if (bpsEditText == null) {
        break missingId;
      }

      id = R.id.bpsLabel;
      TextView bpsLabel = ViewBindings.findChildViewById(rootView, id);
      if (bpsLabel == null) {
        break missingId;
      }

      id = R.id.cholesterolEditText;
      EditText cholesterolEditText = ViewBindings.findChildViewById(rootView, id);
      if (cholesterolEditText == null) {
        break missingId;
      }

      id = R.id.cholesterolLabel;
      TextView cholesterolLabel = ViewBindings.findChildViewById(rootView, id);
      if (cholesterolLabel == null) {
        break missingId;
      }

      id = R.id.confirmButton;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.doctorIdEditText;
      EditText doctorIdEditText = ViewBindings.findChildViewById(rootView, id);
      if (doctorIdEditText == null) {
        break missingId;
      }

      id = R.id.doctorIdLabel;
      TextView doctorIdLabel = ViewBindings.findChildViewById(rootView, id);
      if (doctorIdLabel == null) {
        break missingId;
      }

      id = R.id.fbsEditText;
      EditText fbsEditText = ViewBindings.findChildViewById(rootView, id);
      if (fbsEditText == null) {
        break missingId;
      }

      id = R.id.fbsLabel;
      TextView fbsLabel = ViewBindings.findChildViewById(rootView, id);
      if (fbsLabel == null) {
        break missingId;
      }

      id = R.id.genderEditText;
      EditText genderEditText = ViewBindings.findChildViewById(rootView, id);
      if (genderEditText == null) {
        break missingId;
      }

      id = R.id.genderLabel;
      TextView genderLabel = ViewBindings.findChildViewById(rootView, id);
      if (genderLabel == null) {
        break missingId;
      }

      id = R.id.heightEditText;
      EditText heightEditText = ViewBindings.findChildViewById(rootView, id);
      if (heightEditText == null) {
        break missingId;
      }

      id = R.id.heightLabel;
      TextView heightLabel = ViewBindings.findChildViewById(rootView, id);
      if (heightLabel == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      EditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.nameLabel;
      TextView nameLabel = ViewBindings.findChildViewById(rootView, id);
      if (nameLabel == null) {
        break missingId;
      }

      id = R.id.weightEditText;
      EditText weightEditText = ViewBindings.findChildViewById(rootView, id);
      if (weightEditText == null) {
        break missingId;
      }

      id = R.id.weightLabel;
      TextView weightLabel = ViewBindings.findChildViewById(rootView, id);
      if (weightLabel == null) {
        break missingId;
      }

      return new ActivityEditProfileBinding((ScrollView) rootView, ageEditText, ageLabel,
          bloodGroupEditText, bloodGroupLabel, bpsEditText, bpsLabel, cholesterolEditText,
          cholesterolLabel, confirmButton, doctorIdEditText, doctorIdLabel, fbsEditText, fbsLabel,
          genderEditText, genderLabel, heightEditText, heightLabel, nameEditText, nameLabel,
          weightEditText, weightLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
